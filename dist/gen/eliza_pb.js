"use strict";
// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file eliza.proto (package connectrpc.eliza.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.DelayRequest = exports.NoteRequest = exports.SlackActionItemResponse = exports.SlackActionItemRequest = exports.ActionItemRequest = exports.AssignRequest = exports.Response = exports.Empty = exports.SyncRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message connectrpc.eliza.v1.SyncRequest
 */
class SyncRequest extends protobuf_1.Message {
    /**
     * @generated from field: string project = 1;
     */
    project = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.SyncRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SyncRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SyncRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SyncRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SyncRequest, a, b);
    }
}
exports.SyncRequest = SyncRequest;
/**
 * @generated from message connectrpc.eliza.v1.Empty
 */
class Empty extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.Empty";
    static fields = protobuf_1.proto3.util.newFieldList(() => []);
    static fromBinary(bytes, options) {
        return new Empty().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Empty().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Empty().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Empty, a, b);
    }
}
exports.Empty = Empty;
/**
 * @generated from message connectrpc.eliza.v1.Response
 */
class Response extends protobuf_1.Message {
    /**
     * @generated from field: string response = 1;
     */
    response = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.Response";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new Response().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Response().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Response().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Response, a, b);
    }
}
exports.Response = Response;
/**
 * @generated from message connectrpc.eliza.v1.AssignRequest
 */
class AssignRequest extends protobuf_1.Message {
    /**
     * @generated from field: string actionId = 1;
     */
    actionId = "";
    /**
     * @generated from field: string userId = 2;
     */
    userId = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.AssignRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "actionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "userId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new AssignRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AssignRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AssignRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AssignRequest, a, b);
    }
}
exports.AssignRequest = AssignRequest;
/**
 * @generated from message connectrpc.eliza.v1.ActionItemRequest
 */
class ActionItemRequest extends protobuf_1.Message {
    /**
     * @generated from field: string actionId = 1;
     */
    actionId = "";
    /**
     * @generated from field: optional string reason = 2;
     */
    reason;
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.ActionItemRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "actionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        {
            no: 2,
            name: "reason",
            kind: "scalar",
            T: 9 /* ScalarType.STRING */,
            opt: true,
        },
    ]);
    static fromBinary(bytes, options) {
        return new ActionItemRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ActionItemRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ActionItemRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ActionItemRequest, a, b);
    }
}
exports.ActionItemRequest = ActionItemRequest;
/**
 * @generated from message connectrpc.eliza.v1.SlackActionItemRequest
 */
class SlackActionItemRequest extends protobuf_1.Message {
    /**
     * @generated from field: string slackId = 1;
     */
    slackId = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.SlackActionItemRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "slackId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SlackActionItemRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SlackActionItemRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SlackActionItemRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SlackActionItemRequest, a, b);
    }
}
exports.SlackActionItemRequest = SlackActionItemRequest;
/**
 * @generated from message connectrpc.eliza.v1.SlackActionItemResponse
 */
class SlackActionItemResponse extends protobuf_1.Message {
    /**
     * @generated from field: string actionId = 1;
     */
    actionId = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.SlackActionItemResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "actionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new SlackActionItemResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SlackActionItemResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SlackActionItemResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SlackActionItemResponse, a, b);
    }
}
exports.SlackActionItemResponse = SlackActionItemResponse;
/**
 * @generated from message connectrpc.eliza.v1.NoteRequest
 */
class NoteRequest extends protobuf_1.Message {
    /**
     * @generated from field: string actionId = 1;
     */
    actionId = "";
    /**
     * @generated from field: string note = 2;
     */
    note = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.NoteRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "actionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "note", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new NoteRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new NoteRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new NoteRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(NoteRequest, a, b);
    }
}
exports.NoteRequest = NoteRequest;
/**
 * @generated from message connectrpc.eliza.v1.DelayRequest
 */
class DelayRequest extends protobuf_1.Message {
    /**
     * @generated from field: string actionId = 1;
     */
    actionId = "";
    /**
     * @generated from field: string userId = 2;
     */
    userId = "";
    /**
     * @generated from field: string datetime = 3;
     */
    datetime = "";
    /**
     * @generated from field: string reason = 4;
     */
    reason = "";
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static runtime = protobuf_1.proto3;
    static typeName = "connectrpc.eliza.v1.DelayRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        { no: 1, name: "actionId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 2, name: "userId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 3, name: "datetime", kind: "scalar", T: 9 /* ScalarType.STRING */ },
        { no: 4, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    ]);
    static fromBinary(bytes, options) {
        return new DelayRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DelayRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DelayRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DelayRequest, a, b);
    }
}
exports.DelayRequest = DelayRequest;
//# sourceMappingURL=eliza_pb.js.map